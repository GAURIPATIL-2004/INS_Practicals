def generate_key(text, key):
    return (key * (len(text) // len(key))) + key[:len(text) % len(key)]

def vigenere_encrypt(text, key):
    return ''.join(chr((ord(t) + ord(k) - 2 * ord('A')) % 26 + ord('A')) for t, k in zip(text, key))

def vigenere_decrypt(cipher, key):
    return ''.join(chr((ord(c) - ord(k) + 26) % 26 + ord('A')) for c, k in zip(cipher, key))

# User Input
text = input("Enter message: ").upper().replace(" ", "")
keyword = input("Enter keyword: ").upper()

# Encryption and Decryption
key = generate_key(text, keyword)
cipher_text = vigenere_encrypt(text, key)
print("Encrypted Message:", cipher_text)

decrypted_text = vigenere_decrypt(cipher_text, key)
print("Decrypted Message:", decrypted_text)
